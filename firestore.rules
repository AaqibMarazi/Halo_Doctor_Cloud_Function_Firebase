rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	
    match /Users/{userId}{
    allow create: if true;
    allow read, update:if isAuthenticated();
    }
    
    match /Doctors/{doctorId}{
    allow read:if true;
    //alllow create doctor if user is doctor and doctor id not set
    allow create: if isAuthenticated() && get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.role == 'doctor';
    	match /balance {
      allow read:if isAuthenticated() && get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.role == 'doctor';
      }
    }
  
  	match /DoctorCategory/{categoryId}{
    allow read: if isAuthenticated();
    }
    
    match /DoctorTimeslot/{timeslotId}{
    // allow create timeslot only role doctor
    allow create: if isAuthenticated() && get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.role == 'doctor';
    allow read: if isAuthenticated();
    allow update,delete: if get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.doctorId == resource.data.doctorId;
    }
  
    match /Order/{orderId}{
    allow read,update: if isAuthenticated() && request.auth.uid == resource.data.userId;

    }
    match /WitdrawMethod/{withdrawId}{
    allow read,create: if isAuthenticated() && get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.role == 'doctor';
    }
    match /WithdrawRequest/{withdrawRequestId}{
    allow read,create: if isAuthenticated() && get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.role == 'doctor';
    }
    match /Transaction/{transactionId}{
    allow read,create: if isAuthenticated();
    }
    match /Review/{reviewId}{
    allow read,create,update: if isAuthenticated();
    }
    match /Problem/{problemId}{
    allow read,create,update: if isAuthenticated();
    }
    match /TopRatedDoctor/{topRatedDoctorsId}{
    allow read : if isAuthenticated();
    }
  }
  
  function isAuthenticated(){
  	return request.auth != null;
  }
}